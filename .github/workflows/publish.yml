name: Build and Release

on:
  push:
    tags:
      - 'v*'   # 推送 tag 时触发，如 v1.0.0
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v2

    - name: Restore NuGet packages
      run: nuget restore subs-check.win.gui.sln

    - name: Build project
      run: msbuild subs-check.win.gui.csproj /p:Configuration=Release

    - name: Package artifact
      run: |
        mkdir -p release
        cp -r bin/Release/*.exe bin/Release/*.dll release/
        # 由于使用了 AutoUpdater, 故需要将 runtimes 和 zh 目录也打包
        cp -r bin/Release/runtimes release/
        cp -r bin/Release/zh release/
      shell: bash

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: subs-check-win
        path: release/
        if-no-files-found: error # 如果没有文件，报错

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: master

    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: subs-check-win
        path: release

    - name: Prepare tags (delete local tags then fetch remote tags cleanly)
      id: tags
      run: |
        CURRENT_TAG="${GITHUB_REF#refs/tags/}"
        echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
        PREV_TAG=$(git tag --sort=-creatordate | grep -v "^${CURRENT_TAG}$" | head -n1 || true)
        echo "prev_tag=$PREV_TAG" >> $GITHUB_OUTPUT
      shell: bash

    - name: Create ZIP archive
      run: |
        cd release
        zip -r subs-check-win.zip .
      shell: bash

    # 用 git-cliff 生成并更新 CHANGELOG.md（范围：PREV_TAG..CURRENT_TAG）
    - name: Generate changelog with git-cliff
      uses: orhun/git-cliff-action@v4
      id: git-cliff
      with:
        config: cliff.toml
        args: ${{ steps.tags.outputs.prev_tag && format('{0}..{1}', steps.tags.outputs.prev_tag, steps.tags.outputs.current_tag) || steps.tags.outputs.current_tag }} -o CHANGELOG.md

    # 用 git-cliff 生成 Release body（范围：PREV_TAG..CURRENT_TAG）
    - name: Generate changelog with git-cliff (release body)
      uses: orhun/git-cliff-action@v4
      id: git-cliff-release
      with:
        config: cliff-release.toml
        args: ${{ steps.tags.outputs.prev_tag && format('{0}..{1}', steps.tags.outputs.prev_tag, steps.tags.outputs.current_tag) || steps.tags.outputs.current_tag }}

    - name: Generate update.xml
      run: |
        CURRENT_TAG="${{ steps.tags.outputs.current_tag }}"
        VERSION="${CURRENT_TAG#v}"   # 去掉开头的 v

        cat > update.xml <<EOF
        <?xml version="1.0" encoding="utf-8"?>
        <item>
            <version>${VERSION}</version>
            <url>https://gh.39.al/https://github.com/sinspired/SubsCheck-Win-GUI/releases/download/${CURRENT_TAG}/subs-check-win.zip</url>
            <changelog>https://gh.39.al/https://raw.githubusercontent.com/sinspired/SubsCheck-Win-GUI/master/CHANGELOG.md</changelog>
            <mandatory>false</mandatory>
            <executable>subs-check.win.gui.exe</executable>
        </item>
        EOF

    - name: Commit changelog and update.xml
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

        git add CHANGELOG.md update.xml
        if git diff --cached --quiet; then
          echo "No changes in CHANGELOG.md or update.xml"
          exit 0
        fi

        git commit -m "chore(release): update CHANGELOG.md and update.xml for ${{ steps.tags.outputs.current_tag }}"
        git push

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        body: ${{ steps.git-cliff-release.outputs.content }}
        files: release/subs-check-win.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
